name: Deploy to Production

on:
  push:
    branches:
      - master
      - firebase

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Compile TypeScript
        run: |
          echo "🔨 Starting TypeScript compilation..."
          echo "Node.js version: $(node --version)"
          echo "pnpm version: $(pnpm --version)"
          echo "TypeScript version: $(npx tsc --version)"
          
          # Use custom build script for more reliable compilation
          chmod +x build-script.cjs
          node build-script.cjs
          
        
      - name: Setup SSH
        run: |
          echo "🔐 Setting up SSH authentication for deployment..."
          echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          
          # Start SSH agent and add key
          eval $(ssh-agent -s)
          ssh-add /tmp/ssh_key
          mkdir /home/runner/.ssh
          # Set SSH options for subsequent commands
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
          echo "  LogLevel ERROR" >> ~/.ssh/config
          echo "Host ${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/config
          echo "  HostName ${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "  IdentityFile /tmp/ssh_key" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          
          echo "✅ SSH key loaded successfully"
          
      - name: Add known hosts
        run: |
          echo "🔒 Adding server to known hosts..."
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
          echo "✅ Known hosts updated"
          
      - name: Test SSH connection
        run: |
          echo "🔌 Testing SSH connection to ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}"
          ssh -o ConnectTimeout=30 -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo '✅ SSH connection successful'; echo 'Server info:'; uname -a; echo 'Current directory:'; pwd; echo 'User:'; whoami; echo 'Disk space:'; df -h | head -3"
          
      - name: Create deploy directory
        run: |
          echo "📁 Creating deployment directory: /root/bot"
          ssh -o ConnectTimeout=30 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "mkdir -p /root/bot && echo '✅ Deploy directory created/verified: /root/bot'"
          
      - name: Deploy files to server
        run: |
          echo "🚀 Deploying files to ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/root/bot"
          rsync -avz --progress --stats \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            --exclude='*.log' \
            --exclude='.env*' \
            build/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/root/bot
          echo "✅ Files deployed successfully"
          
    
      - name: Manage PM2 process
        run: |
          echo "⚙️ Managing PM2 process for rabbitConsumer..."
          ssh -o ConnectTimeout=30 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            cd /root/bot
            echo 'Current PM2 status:'
            npx pm2 list || echo 'PM2 not yet running'
            echo 'Managing rabbitConsumer process...'
            if npx pm2 reload rabbitConsumer 2>/dev/null; then
              echo '✅ Successfully reloaded existing rabbitConsumer process'
            else
              echo 'Starting new rabbitConsumer process...'
              npx pm2 start Simulator/rabbitConsumer.js --name rabbitConsumer
              echo '✅ Successfully started new rabbitConsumer process'
            fi
            echo 'Final PM2 status:'
            npx pm2 list
            npx pm2 save
          "
          
      - name: Verify deployment
        run: |
          echo "✅ Verifying deployment..."
          ssh -o ConnectTimeout=30 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            cd /root/bot
            echo 'Deployment verification:'
            echo '📁 Directory contents:'
            ls -la | head -10
            echo '📦 Package.json exists:'
            test -f package.json && echo '✅ package.json found' || echo '❌ package.json missing'
            echo '🔧 Node modules:'
            test -d node_modules && echo '✅ node_modules installed' || echo '❌ node_modules missing'
            echo '⚙️ PM2 process status:'
            npx pm2 show rabbitConsumer || echo 'Process not found'
          "
          
      - name: Deployment success
        run: |
          echo ""
          echo "🎉 PRODUCTION DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "============================================"
          echo "✅ Code deployed to: ${{ secrets.DEPLOY_HOST }}:/root/bot"
          echo "✅ Dependencies installed on server"
          echo "✅ PM2 process running: rabbitConsumer"
          echo "✅ Server ready for production"
          echo "✅ SSH connection working perfectly"
          echo ""
          echo "🔗 Target: ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}"
          echo "📁 Path: /root/bot"
          echo ""
          
      - name: Cleanup
        if: always()
        run: |
          rm -f /tmp/ssh_key
          echo "🧹 Cleanup completed"